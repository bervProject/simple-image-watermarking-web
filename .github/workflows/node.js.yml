# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI
on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: siwb
  HEROKU_APP_NAME: siwb
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x, 17.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: yarn --frozen-lockfile
    - name: Lint
      run: yarn lint
    - name: Test & Build
      run: |
        yarn test
        yarn build
    - name: Upload to codecov
      run: bash <(curl -s https://codecov.io/bash)
  docker-build:
    # Ensure test job passes before pushing image.
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
  docker-push:
    # Ensure test job passes before pushing image.
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Container registry Heroku
        uses: docker/login-action@v1
        with:
          registry: registry.heroku.com
          username: bervianto.leo@gmail.com
          password: ${{ secrets.HEROKU_API_KEY }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            bervproject/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
            registry.heroku.com/${{ env.HEROKU_APP_NAME }}/web
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: "" #Must be unique in Heroku
          heroku_email: "bervianto.leo@gmail.com"
          justlogin: true
      - name: Release container
        if: ${{ github.ref == 'refs/heads/main' }}
        run: heroku container:release web --app=${HEROKU_APP_NAME}

