# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
name: Node.js CI
on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: siwb
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install
      run: yarn --frozen-lockfile
    - name: Lint
      run: yarn lint
    - name: Test & Build
      run: |
        yarn test
        yarn build
    - uses: codecov/codecov-action@v3
      name: Upload to codecov
  test-infra:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 20.x
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
      - name: Install Dependencies
        working-directory: ./infra
        run: npm i
      - name: Build
        working-directory: ./infra
        run: npm run build
  docker-build:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v3.1.0
        name: Lint Dockerfile
        with:
          dockerfile: Dockerfile
          failure-threshold: error
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
  docker-push:
    # Ensure test job passes before pushing image.
    needs: build
    runs-on: ubuntu-22.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            bervproject/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

